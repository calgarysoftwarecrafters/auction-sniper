apiVersion: v1
kind: Secret
metadata:
  name: auctionsniper-postgresql
  namespace: default
  labels:
    app: auctionsniper-postgresql
type: Opaque
data:
  postgresql-password: OTAyYTA0Mzk1ZDg5OTMyYWFlMDQ0MWE1NTJhNDQyZWVhMWFjNmE2MGQ1ZDUxMzVjNDYzNDllODc1OGFhZDczZmM0ZmQyZGVkNDA1MTlmY2NjN2FkZmRiYzk0NTVlYjdiM2RkMjllODYwY2I0MzBhYjcxYzA2ODJlMzk2YjU0MjYzODZjZjE2NDE5YzJkOTA1ZTIzYzk1NmRlYWEzNzQxZGQ2OTJhNTNkYmEwMGM5MzM1NDQ1NzViYzk5YTI1MGJmYTBhYWIzNDkwM2M1ZWI3Y2I4MzZiZDJhZjE4YTgxMTQzMDM0OWY5NjFkMTNhM2VhYWRiMGU4YTJhZGMzZTQwMA==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auctionsniper-postgresql
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auctionsniper-postgresql
  template:
    metadata:
      labels:
        app: auctionsniper-postgresql
    spec:
      volumes:
        - name: data
          emptyDir: {}
      containers:
        - name: postgres
          image: postgres:11.5
          env:
            - name: POSTGRES_USER
              value: auctionsniper
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auctionsniper-postgresql
                  key: postgresql-password
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/
---
apiVersion: v1
kind: Service
metadata:
  name: auctionsniper-postgresql
  namespace: default
spec:
  selector:
    app: auctionsniper-postgresql
  ports:
    - port: 5432
